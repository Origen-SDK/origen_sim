<a class="anchor release_tag" name="v0_16_0"></a>
<h1><a href="#v0_16_0">Tag: v0.16.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 18-Mar-2019 09:56AM


* All pattern major step comments are now output to the console and timestamped to simulation time.
  This gives a much better overview of progress and identification of where pin miscompares have
  originated from.
* All `Origen.log` output from the application code is similarly timestamped and synchronized with
  the simulation. Apps are encouraged not to use puts to output debug/status information to the
  console as that will occur immediately and will not be synchronized.
* Miscompares that occur during register read transactions will now be automatically translated
  into register actual data in the failure log.
* Added a register to the testbench called `origen.debug.marker` which can be set in application
  code via `tester.marker = 0x1234`. This then gives you something to search for in a wave viewer
  if you want to identify a specific point in the code.
* Change to how the verbose logging (show all simulator output) is enabled. Someway along the line
  it became such that running with `-d(ebug)` meant that verbose logging was enabled, when in fact
  all other Origen commands require the `-verbose` switch to enable this. OrigenSim now aligns with
  this convention. If you prefer the old behavior you can enable it at app-level via:

~~~ruby
Origen.log.level = :verbose if Origen.debugger\_enabled?
~~~

* The `:time\_factor` simulation config option has been removed, OrigenSim will now automatically
  adjust if the simulation is using a timescale of 1ps instead of 1ns (for example).
* Added a :max\_errors simulation config option which defaults to 100. This can also be overridden
  at runtime via the `--max\_errors` switch. When exceeded, the simulation will abort immediately.
* Simulating a list of patterns in a flow, e.g. `origen g pat1 pat2 pat1 --flow eng` will now run
  all duplicate patterns, i.e. the second pat1 in this example will now execute twice as you would
  expect, whereas until now only the first occurrence would be executed.
* Various clean-up/refactoring of the VPI extension and significant test bench simplification. All
  error generation and handling is now done in the C code and the testbench is now only the DUT
  with a pin driver on each pin and all connections between pin drivers has been removed.
* Added ability for applications to change the capture storage location used by `sim\_capture` and
  `sim\_delay`.

<a class="anchor release_tag" name="v0_15_0"></a>
<h1><a href="#v0_15_0">Tag: v0.15.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 11-Feb-2019 09:37AM


* Added options to the `sim:build` command, added new command (`sim:run`) to support
  simulation of existing vector-level patterns in a supported ATE format, and various
  other small improvements (Corey Engelken). See this PR for more details: 
  https://github.com/Origen-SDK/origen\_sim/pull/26
* Fixed erroneous "The simulation monitor has stopped unexpectedly" errors in the log
  during a controller simulator shutdown.

<a class="anchor release_tag" name="v0_14_0"></a>
<h1><a href="#v0_14_0">Tag: v0.14.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 27-Nov-2018 16:32PM


* Added logging of pin miscompares, requires snapshot re-compile to enable (Paul Derouen)
* Various bug fixes

<a class="anchor release_tag" name="v0_13_0"></a>
<h1><a href="#v0_13_0">Tag: v0.13.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 04-Oct-2018 06:50AM


Many updates, see the documentation in the Origen guides for latest features and APIs

<a class="anchor release_tag" name="v0_12_0"></a>
<h1><a href="#v0_12_0">Tag: v0.12.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 28-Jun-2018 15:09PM


* Now ignores operations on pins not present in the testbench
* Made the simulation fail if the Ruby pattern/flow source crashes (issue #13)
* Increased the maximum number of wave events to 50 (issue #14)
* Logged WARNING lines with similar control to capture/ignore as ERROR lines
* Added more debug status logging during simulator startup

<a class="anchor release_tag" name="v0_11_1"></a>
<h1><a href="#v0_11_1">Tag: v0.11.1</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 21-Jun-2018 17:24PM


Bug fixes to sim:build command

<a class="anchor release_tag" name="v0_11_0"></a>
<h1><a href="#v0_11_0">Tag: v0.11.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 20-Jun-2018 05:39AM


Fixed bug with time factor.


Made log output reading from the simulator asyncronous so that it appears in the console
and log when the main Origen thread is in a long running wait state.

<a class="anchor release_tag" name="v0_10_0"></a>
<h1><a href="#v0_10_0">Tag: v0.10.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 18-Jun-2018 15:21PM


Waves are now named after the patterns and submission of parallel simulation jobs to LSF
is now supported. See https://github.com/Origen-SDK/origen\_sim/pull/12 for more info.

<a class="anchor release_tag" name="v0_9_0"></a>
<h1><a href="#v0_9_0">Tag: v0.9.0</a></h1>

##### Branch: 'master'

##### by Corey Engelken on 01-Jun-2018 09:55AM


Improved testbench multi-process handling. Decrease chance of orphaned/stale processes. (Ginty)

Improved logging, and added failing the simulation due to errors within the log. (Ginty)

Improvded logging will fail the simulation is any <code>error\_strings</code> are found while running the simulation.
The default error strings are simply <code>'ERROR'</code>, but other can be added using
<code>OrigenSim.error\_strings << "STRING TO FAIL!"</code>. This can be disabled completely by clearing the array or
setting it to an empty array: <code>OrigenSim.error\_strings = []</code>.

Exception strings can be added using <code>OrigenSim.error\_string\_exceptions << "string to skip"</code>. This means
that the simulation that would normally fail on <code>"ERROR: uninitialized ROM"</code> can add
<code>OrigenSim.error\_string\_exceptions << "uninitialized ROM"</code> to still pass even with that error.

Similar behavior exists with stderr, except all output to stderr will result is failures.
<code>OrigenSim.stderr\_string\_exceptions</code> can be used to negate stderr strings and
<code>OrigenSim.fail\_on\_stderr = false</code> can be used to disable failing due to stderr logs.

Some shortcut methods were added to start OrigenSim with a specific vendor. The two below are equivalent:

~~~ruby
OrigenSim.cadence(startup\_timeout: 100)

OrigenSim::Tester.new(vendor: :cadence, startup\_timeout: 100)
~~~

OrigenSim now support [the collector](http://origen-sdk.org/origen/guides/misc/utilities/#Collector), allowing for
options to be given as either block arguments or as a hash. The two OrigenSim setups below are equivalent. In the case
of a hash option and a block argument being supplied, the hash option will be kept.

~~~ruby
OrigenSim.cadence(startup\_timeout: 900)

OrigenSim.cadence do |sim|
  sim.startup\_timeout 900
end
~~~

OrigenSim can now accept generic/arbitrary toolchains using the <code>OrigenSim.generic(...)</code> vendor. For this,
an option <code>generic\_run\_cmd</code> must be supplied. An example using <code>ncsim</code>:

~~~ruby
OrigenSim.generic(startup\_timeout: 900) do |sim|
  sim.testbench\_top 'na\_origen'
  sim.generic\_run\_cmd do |s|
    "ncsim na\_origen -loadpli origen.so:bootstrap +socket+#{s.socket\_id}"
  end
end
~~~

The testbench name can be changed. From the Ruby side, use the option <code>testbench\_top</code>. When generating the
VPI, use the commad line option <code>--testbench NAME</code>.

Updated README and updated gemspec to latest Origen version.


<a class="anchor release_tag" name="v0_8_0"></a>
<h1><a href="#v0_8_0">Tag: v0.8.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 06-Apr-2018 05:21AM


* Changed the representation of time within the simulation (VPI extension) to be in
  ps rather than ns. This allows a time\_factor less that 0 to be used. e.g.
  `time\_factor: 0.1` if the period in the simulation turns out to be 400ns but you
   have defined it in Origen as 40ns.

* Removed the namespace from the Origen pins file that is generated by sim:build, it
  can now be imported into an application properly like this:

  ~~~ruby
  # Import pin definitions as extracted from the design
  import 'my\_block\_name', dir: "#{Origen.root!}/vendor/wherever/i/like", namespace: nil
  ~~~

* `origen g` will now report a FAIL if the simulation terminates unexpectedly before
  the end.

* Synopsys seems to support poking a net with a part select, e.g.
  `poke "path.to.some.net[15:8]"`. OrigenSim will now utilize this directly.

* Added support for `my\_reg.sync` when the register is read over a parallel interface.
  Added a test for this.

* Updated the testbench to include memory dumps for Synopsys by default, not sure how
  long this takes but will probably add the ability to turn it on/off in future.
  Always on for now though.

<a class="anchor release_tag" name="v0_7_0"></a>
<h1><a href="#v0_7_0">Tag: v0.7.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 06-Feb-2018 09:13AM


Now supports Synopsys VCS

<a class="anchor release_tag" name="v0_6_0"></a>
<h1><a href="#v0_6_0">Tag: v0.6.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 19-Jan-2018 10:32AM


* Added simulation capture and replay feature
* Restored and improved support for Icarus Verilog
* General robustness improvements and bug fixes

<a class="anchor release_tag" name="v0_5_5"></a>
<h1><a href="#v0_5_5">Tag: v0.5.5</a></h1>

##### Branch: 'master'

##### by Lajaunie Ronald-B01784 on 07-Dec-2017 08:40AM


* Implemented '--fast' command line option for using alternate probe depth (specified in
OrigenSim::Tester instantiation)

~~~ruby
  OrigenSim::Tester.new vendor: :cadence,
                        irun: 'irun',
                        simvision: 'simvision',
                        time\_factor: 1000000,
                        fast\_probe\_depth: 2       # use depth of 2 when --fast option is
used

  #------------

  $ origen g <pattern> --fast
~~~

<a class="anchor release_tag" name="v0_5_4"></a>
<h1><a href="#v0_5_4">Tag: v0.5.4</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 10-Nov-2017 11:20AM


Minor update to keep Origen Sim working during program generation when combined with the
newer versions of ATP/OrigenTesters

<a class="anchor release_tag" name="v0_5_3"></a>
<h1><a href="#v0_5_3">Tag: v0.5.3</a></h1>

##### Branch: 'master'

##### by Lajaunie Ronald-B01784 on 23-Aug-2017 13:59PM


* Handle stores for pin\_groups

<a class="anchor release_tag" name="v0_5_2"></a>
<h1><a href="#v0_5_2">Tag: v0.5.2</a></h1>

##### Branch: 'master'

##### by Lajaunie Ronald-B01784 on 11-Aug-2017 08:34AM


* Add incl\_files in configuration. Any file listed here will be included by the top-level
origen.v file when generated. Allows developer to easily add custom verilog control.
* Allow alternate -top to be used in case of custom configuration; defaults to 'origen' if
not specified.
* Switch to c99 std from gnu99 to be more flexible between RHEL5 and RHEL6
* Add power and ground pins to origen.v template.

<a class="anchor release_tag" name="v0_5_1"></a>
<h1><a href="#v0_5_1">Tag: v0.5.1</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 02-Jun-2017 09:28AM


Include ext dir in gem build

<a class="anchor release_tag" name="v0_5_0"></a>
<h1><a href="#v0_5_0">Tag: v0.5.0</a></h1>

##### Branch: 'master'

##### by Stephen McGinty on 01-Jun-2017 04:31AM


Initial release


